plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar')
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
#p*w1.star/w.bar
list(p*w1.star/w.bar,w.bar)
}
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[1]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[1]
end <- p.prime(s, start)[1]
}
}
#plot w.bar
p<-seq(from=0,to=1,length.out=100)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar')
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
#plot w.bar
#p<-seq(from=0,to=1,length.out=100)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar')
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[1]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[1]
end <- p.prime(s, start)[1]
}
}
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
#plot w.bar
#p<-seq(from=0,to=1,length.out=100)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar')
#plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
#plot w.bar
#p<-seq(from=0,to=1,length.out=100)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar')
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
#plot w.bar
#p<-seq(from=0,to=1,length.out=100)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar')
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#B: s=1, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=1,p0=0.4)
#C: s=2, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=2,p0=0.4)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1),main=paste("s=",s,sep=''))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
#plot w.bar
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar',main=paste("s=",s,sep=''))
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1),main=paste("s=",s,sep=''))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
#plot w.bar
par(new=TRUE)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar',main=paste("s=",s,sep=''))
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#B: s=1, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=1,p0=0.4)
#C: s=2, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=2,p0=0.4)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
par(mfrow=c(2,1))
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1),main=paste("s=",s,sep=''))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
#plot w.bar
#par(new=TRUE)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar',main=paste("s=",s,sep=''))
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#B: s=1, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=1,p0=0.4)
#C: s=2, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=2,p0=0.4)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
par(mfrow=c(2,1))
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1),main=paste(expression(p[t+1]),", s=",s,sep=''))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
#plot w.bar
#par(new=TRUE)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab='w.bar',main=paste("w.bar, s=",s,sep=''))
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#B: s=1, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=1,p0=0.4)
#C: s=2, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=2,p0=0.4)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
par(mfrow=c(2,1))
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1),main=paste(expression(p[t+1]),", s=",s,sep=''))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
#plot w.bar
#par(new=TRUE)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab=expression(w.bar))
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#B: s=1, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=1,p0=0.4)
#C: s=2, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=2,p0=0.4)
#Frequency-dependent selection (fitnesses depend on selection)
fd.sel<- function(p,s, p0, t = 100) {
p.prime <- function(s,p){
w11 <- 1-3*2*p*(1-p)+3*(1-p)^2
w12 <- 1-s*2*p*(1-p)
w22 <- 1-3*2*p*(1-p)+3*p^2
w1.star <- p*w11+(1-p)*w12
w2.star <- p*w12+(1-p)*w22
w.bar <- w1.star*p + (1-p)*w2.star
list(p*w1.star/w.bar,w.bar)
}
par(mfrow=c(2,1))
plot(p, p.prime(s,p)[[1]],type='l',xlab=expression(p[t]),ylab=expression(p[t+1]), ylim=c(0,1),main=paste("s = ",s,sep=''))
abline(a=0,b=1, col = "gray")
start = p0
end = p.prime(s, start)[[1]]
points(start,start, pch = 19)  #show the initial point
lines(x=c(start,start),y=c(start,end) )  #first draw line from (x0, x0) to (x0, f(x0)
vert=FALSE  #2nd line will be horizonatal from (x0,f(x0) to (f(x0),f(x0))
for(i in 1:(2*t))
{
if(vert) #draw vertical line from (x,x) to (x,f(x))
{
lines(x=c(start,start),y=c(start,end) )
vert=FALSE
}
else  #draw horizontal line from (x,f(x)) to (f(x),f(x))
{
lines(x=c(start,end),y=c(end,end) )
vert=TRUE
start= p.prime(s, start)[[1]]
end <- p.prime(s, start)[[1]]
}
}
#plot w.bar
#par(new=TRUE)
plot(p, p.prime(s,p)[[2]],type='l',xlab=expression(p[t]),ylab=expression(w.bar))
}
#A: s=0, p0=0.01
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=0,p0=0.01)
#B: s=1, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=1,p0=0.4)
#C: s=2, p0=0.4
p<-seq(from=0,to=1,length.out=100)
fd.sel(p,s=2,p0=0.4)
library(rSFFreader)
library(rSffreader)
source("http://bioconductor.org/biocLite.R")
biocLite("rSFFreader")
library(rSFFreader)
ans <- readSff("~/bio/app/seqyclean/test_data/in.sff")
ans <- readSff("~/bio/app/seqyclean/test_data/test454.sff")
setwd("~/bio/app/seqyclean/test_data/")
ans <- readSff("test454.sff")
ans
ans2 <- readSff("../unit_test/test454.sff")
ans
ans1
ans2
mean(ans2)
ans2@sread
mean(width(ans2@sread))
mean(width(ans@sread))
?readSFF
?readSff
ans <- readSff("test454.sff",clipMode="raw")
ans2 <- readSff("../unit_test/test454.sff",clipMode="raw")
mean(width(ans@sread))
mean(width(ans2@sread))
availableClipModes(ans)
sum(width(ans2@sread))
sum(width(ans@sread))
